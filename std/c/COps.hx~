package c;

@:headerCode('
#define hxc_add(a,b) (a+b)
#define hxc_sub(a,b) (a-b)
#define hxc_mul(a,b) (a*b)
#define hxc_div(a,b) (a/b)
#define hxc_shl(a,b) (a<<b)
#define hxc_shr(a,b) (a>>b)
#define hxc_and(a,b) (a&b)
#define hxc_or(a,b) (a|b)
#define hxc_xor(a,b) (a^b)
#define hxc_land(a,b) (a && b)
#define hxc_lor(a,b) (a || b)
#define hxc_gt(a,b) (a>b)
#define hxc_lt(a,b) (a<b)
#define hxc_gte(a,b) (a>=b)
#define hxc_lte(a,b) (a<=b)
')
@:keep
class Headers{}

extern class COps {

	@:plain static function hxc_add<A,B>(a:A,b:B):A;
	@:plain static function hxc_sub<A,B>(a:A,b:B):A;
	@:plain static function hxc_mul<A,B>(a:A,b:B):A;
	@:plain static function hxc_div<A,B>(a:A,b:B):A;
	@:plain static function hxc_shl<A,B>(a:A,b:B):A;
	@:plain static function hxc_shr<A,B>(a:A,b:B):A;
	@:plain static function hxc_and<A,B>(a:A,b:B):A;
	@:plain static function hxc_or<A,B>(a:A,b:B):A;
	@:plain static function hxc_xor<A,B>(a:A,b:B):A;
	@:plain static function hxc_land<A,B>(a:A,b:B):A;
	@:plain static function hxc_lor<A,B>(a:A,b:B):A;
	@:plain static function hxc_gt<A,B>(a:A,b:B):A;
	@:plain static function hxc_lt<A,B>(a:A,b:B):A;
	@:plain static function hxc_gte<A,B>(a:A,b:B):A;
	@:plain static function hxc_lte<A,B>(a:A,b:B):A;
}